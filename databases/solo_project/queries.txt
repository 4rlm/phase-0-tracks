
Queries
######################
1) Display the information in one table (either table is fine).

  SELECT * FROM customers;
  SELECT * FROM orders;

2) Update an item that meets some condition (you can choose a condition that makes sense).

  UPDATE orders SET shipped="false" WHERE id=3;

3) Display the information in both tables using one query.

  SELECT * FROM customers c JOIN orders o ON c.order_id = o.id;

  1|Adam|Booth|1234 Main St, Naperville, IL 60563|5|5|1|2017-04-07 03:26:18|74.03|true
  2|Gahee|Heo|4321 Buena Vista Dr, Austin, TX 75303|4|4|2|2017-04-07 03:26:16|57.84|false
  3|Easter|Bunny|1357 Candy Egg Blvd, San Diego, CA 90210|3|3|3|2017-04-07 03:26:16|23.31|true
  4|Santa|Claus|1 Cold St., N Pole, NP 99999|2|2|4|2017-04-07 03:26:16|19.72|false
  5|Thomas|Jefferson|2323 Montecello St, Alexandria, VA 02030|1|1|5|2017-04-07 03:25:37|5.25|true

4) Display a narrower selection of columns (fewer columns than all of them, in other words) from both tables using one query.

  **Can only do V1, not V2
  SELECT
    customers.first_name,
    customers.last_name,
    customers.address,
    orders.date,
    orders.price,
    orders.shipped
  FROM
    customers
  JOIN
    orders
  ON
    customers.order_id = orders.id;


  Query Result:
  Adam|Booth|1234 Main St, Naperville, IL 60563|2017-04-07 03:26:18|74.03|true
  Gahee|Heo|4321 Buena Vista Dr, Austin, TX 75303|2017-04-07 03:26:16|57.84|false
  Easter|Bunny|1357 Candy Egg Blvd, San Diego, CA 90210|2017-04-07 03:26:16|23.31|true
  Santa|Claus|1 Cold St., N Pole, NP 99999|2017-04-07 03:26:16|19.72|false
  Thomas|Jefferson|2323 Montecello St, Alexandria, VA 02030|2017-04-07 03:25:37|5.25|true

5) Delete an item that meets some condition (you can choose a condition that makes sense).

  DELETE FROM customers WHERE first_name="Thomas";
  DELETE FROM orders WHERE id=1;

Types of Joins
######################
http://www.sql-join.com/sql-join-types/

1) Inner Join: returns records at the intersection of the two tables.
  SELECT first_name, last_name, date, price, shipped FROM customers c INNER JOIN orders o ON c.id = o.customer_id;

2. Left Join: returns all records from table A and any matching records from table B.  Can add additional queries (bottom) based on order table columns, such as... WHERE shipped is "false";
  SELECT first_name, last_name, date, price, shipped FROM customers c LEFT JOIN orders o ON c.id = o.customer_id WHERE  shipped is "false";

3. Right Join: mirror version of the left join and allows to get a list of all orders, appended with customer information.
  *** Error: RIGHT and FULL OUTER JOINs are not currently supported ***
  SELECT first_name, last_name, date, price, shipped FROM customers c RIGHT JOIN orders o ON c.id = o.customer_id;

4. Full Join: for a list of all records from both tables.
    *** Error: RIGHT and FULL OUTER JOINs are not currently supported ***
    SELECT first_name, last_name, date, price, shipped FROM customers c FULL JOIN orders o ON c.id = o.customer_id;
